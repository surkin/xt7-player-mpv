' Gambas class file

Public items As New String[]
Private RequestStopALL As Boolean = False
Private RequestSkip As Boolean = False
Public converting As Boolean = False
Private converteditems As New String[]

Public Sub Form_Show()
  Dim MySettings As New SettingsClass
  MySettings.Load(Me, global.confpath & "/" & global.CurrentProfile)
  If buttonbox1.text = "" Then selectfolder
End

Public Sub selectfolder()
  MyDialog.title = ("Choose output folder")
  If MyDialog.SelectDirectory() Then Return
  buttonbox1.text = MyDialog.path
End

Public ffproc As Process
  
Public Sub ConvertandSaveAudio()
  Dim i As Integer
  Dim youtube As New Youtubeclass(FMain.youtubetree, False)
  Dim currentstream As String
  Dim outputfolder As String
  Dim outfmt, q As String
  Dim mymplayer As New MplayerClass
  Dim tmpout As String
  Dim outstr As String
  Dim audiotempfolder As String = global.confpath & "/audiotemp/"
  Dim kbps As String  
  Dim finalfile As String
  Dim yttitle As String
  Dim MySettings As New SettingsClass
  Dim fcaption As String = Me.text
  Dim finalitem As String

  converteditems.Clear()
  
  Try Shell "mkdir -p " & audiotempfolder & " >/dev/null 2>&1" Wait
  
  If converting Then
    Message.Error("Sorry, another conversion is in progress")
    Return
  Endif
  converting = True
  Progressbar1.value = 0
  Progressbar2.value = 0
  
  Try outfmt = Split(combobox1.text, " ")[0]
  Try q = Split(combobox2.text, " ")[0]
  If outfmt = "" Then
    Message.error(("Choose output format."))
    Goto returnlabel
  Endif
  If items.count = 0 Then 
    Message.error(("Nothing to convert"))
    Goto returnlabel
  Endif
  If q = "" Then
    Message.error(("Choose quality level."))
    Goto returnlabel
  Endif


    Me.mouse = Mouse.Wait
    TextArea1.mouse = Me.mouse
    combobox1.enabled = False
    Wait
    combobox2.enabled = combobox1.Enabled
    buttonbox1.enabled = combobox1.Enabled
    button1.enabled = combobox1.Enabled


  MySettings.save(Me, global.confpath & "/" & global.currentprofile)

  If buttonbox1.text = "" Then Form_Show()
  outputfolder = buttonbox1.text 
  'For i = 0 To items.max
  i = 0
  While i <= items.max
    
    Me.text = fcaption & " - " & CStr(i + 1) & "/" & CStr(items.max + 1)
    currentstream = items[i]
    yttitle = ""
    If Youtube.IsYoutubeLink(currentstream) Then
      TextArea1.text &= ("Seems a youtube link, getting real stream url and title...") & "\n"
      Try yttitle = Youtube.GetTitle(currentstream)
      TextArea1.text &= ("Title") & ":\n" & yttitle & "\n"
    Endif
    
      If yttitle = "" Then 
        finalfile = outputfolder & "/" & File.Name(currentstream)
          Else
        finalfile = (outputfolder & "/" & yttitle) 
      Endif
    finalfile &= "." & combobox1.text

    kbps = combobox2.text
    mymplayer.clear_options()
    mymplayer.set_option("ytdl-format", "bestaudio")
    mymplayer.set_option("oacopts=ab", kbps)
    mymplayer.set_option("o", Shell(finalfile))
    mymplayer.set_option("no-video", Chr(8))
    'mymplayer.set_option("ytdl", "no")
    Select combobox1.text
      Case Like "*mp3*"
        mymplayer.set_option("of", "mp3")
      Case Like "*ogg*"
        mymplayer.set_option("of", "oga")
      Case Like "*wav*"
        mymplayer.set_option("of", "wav")
    End Select
    mymplayer.set_option("msg-level", "all=status")
    mymplayer.do_play(currentstream)
    mymplayer.waitplayback(100)
    
    TextArea1.text &= ("Source:") & " " & File.Name(currentstream) & "\n"
    TextArea1.text &= ("Destination:") & " " & finalfile & "\n"

    Wait
    While mymplayer.ProcessRunningOvr()
       If RequestStopALL Then 
        TextArea1.text &= ("User stopped.") & "\n\n"
        Goto returnlabel
       Endif
       If RequestSkip Then 
        TextArea1.text &= ("Skipped.") & "\n\n"
        Goto nextlabel
       Endif
       Try Progressbar1.value = mymplayer.get_property_mpv("percent-pos") / 100
       Try Progressbar2.value = (Progressbar1.value / (items.max + 1)) + (i / (items.max + 1))
       Wait 0.1
    Wend
    
    TextArea1.text &= ("Done.") & "\n"
    TextArea1.text &= "\n"
    global.myDebug(outstr)
    
    nextlabel:
    mymplayer.do_stop()

    If RequestSkip = False Then ConvertedItems.Add(finalfile)
    RequestSkip = False
    RequestStopALL = False
    i += 1

  Wend
  
  returnlabel:
  Progressbar1.value = 1
  Progressbar2.value = 1
  mymplayer.do_stop()
  RequestSkip = False
  RequestStopALL = False

  items.Clear()
  Try Kill tmpout
  
  converting = False
  Me.text = ("Updating Library/Playlist")
  Wait
  For Each finalitem In converteditems
    If checkpls.value Then FMain.MyPlaylist.AddFile(FMain.playlistgrid, finalitem, False)
    If Checklib.Value Then FMain.MyLibrary.AddFile(FMain.librarygrid, finalitem, False)
  Next 'finalitem
  Me.text = fcaption
  Me.mouse = Mouse.normal
  TextArea1.mouse = Me.mouse
  combobox1.enabled = True
  Wait
  combobox2.enabled = combobox1.Enabled
  buttonbox1.enabled = combobox1.Enabled
  button1.enabled = combobox1.Enabled
  Me.text = fcaption
  Return
End

Public Function ffProcessRunningOvr() As Boolean
  'As gambas returns runtime error if process is not ready,
  'we'll catch it here

  Dim running As Boolean = False
  Try running = (ffproc.state = 1)
  Return running

End

Private Sub ffkill() 
  
  While ffProcessRunningOvr()
    Try ffproc.Kill
    If ffProcessRunningOvr() Then Wait 0.1
  Wend
  
End


Public Sub ButtonBox1_Click()
  selectfolder()
End

Public Sub Button1_Click()
  ConvertandSaveAudio()
End


Public Sub ButtonStop_Click()

  RequestStopALL = True

End

Public Sub ButtonSkip_Click()

  RequestSkip = True

End

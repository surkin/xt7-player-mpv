' Gambas class file


Public CoverSize As Integer = 180
Public CSTEP As Integer = 8


Public Sub init()
  Dim micimg As Image

  GridUp.columns.count = 2
  GridUp.rows.count = 6
  GridUp[0, 0].text = ("Artist")
  GridUp[1, 0].text = ("Album")
  GridUp[2, 0].text = ("Year")
  GridUp[3, 0].text = ("Title")
  GridUp[4, 0].text = ("Comment")
  GridUp[5, 0].text = ("Lyrics")
  'GridUp[5, 1].picture = Picture["icon:/22/microphone"]
  micimg = Image.Load("audio-input-microphone.png")
  micimg = micimg.Stretch((gridup.Rows.h * 0.7) / (micimg.h / micimg.w), (GridUp.Rows.H * 0.7))
  GridUp[5, 1].picture = micimg.picture

  GridUp.Columns[0].w = -1
  GridUp.Columns[1].w = -1
  
  GridDown.columns.count = 2
  GridDown.rows.count = 5
  GridDown[0, 0].text = ("Radio")
  GridDown[1, 0].text = ("Name")
  GridDown[2, 0].text = ("Length")
  GridDown[3, 0].text = ("Size")
  GridDown[4, 0].text = ("Audio Info")
  
  GridDown.Columns[0].w = -1
  GridDown.Columns[1].w = -1
  
  coversize = CInt(audioform.gridup.Rows[0].Height * GridUp.Rows.Count * 1.2)
  coverpanel.w = coversize
  CoverBox.h = CoverBox.w 
  
  MakeGridShadow(audioform.gridupShadow, GridUp)
  MakeGridShadow(audioform.griddownShadow, GridDown)
End




Public Sub UpdateLength(length As String)
  audioform.UpdateCell(audioform.griddown, 2, 1, length)
End

Public Sub AudioAreaGroup_Drop()

  FMain.VideoAreaGroup_Drop()
End

Public Sub AudioAreaGroup_MouseDrag()
  
  FMain.VideoAreaGroup_MouseDrag()
  
End
Private Function mouse_over_mic() As Boolean 
  If Lower(Last.name) = "gridup" Then
    If GridUp.row = 5 Then 
      Return True
    Endif
  Endif
  Return False
End

Public Sub AudioAreaGroup_MouseDown()
  If mouse_over_mic() Then Return 'don't pause playback
  FMain.VideoAreaGroup_MouseDown()
End


Public Sub AudioAreaGroup_KeyPress()
  
  FMain.VideoAreaGroup_KeyPress()
  
End

Public Sub AudioAreaGroup_MouseUp()
  FMain.VideoAreaGroup_MouseUp()
End

Public Sub AudioAreaGroup_MouseWheel()
  
  FMain.VideoAreaGroup_MouseWheel()
  
End

Public Sub AudioAreaGroup_DblClick()
  
  FMain.VideoAreaGroup_DblClick()
  
End

Public Sub AudioAreaGroup_Enter()
  'Debug picturebox1.handle
  AudioPanel.setfocus()
  
End

Public Sub CoverBox_Enter()

  Last.Border = border.Plain

End

Public Sub CoverBox_Leave()

  Last.border = border.none

End

Public Sub CoverBox_MouseDown()
  FMain.CoverBox_DblClick()
End


Public Sub TimerZoomIn_Timer()
  TimerZoomOut.stop
  If CoverBox.w < Coversize Then
    If CoverBox.w + CSTEP > coversize Then
      CoverBox.Resize(Coversize, Coversize)
        Else
      CoverBox.Resize(CoverBox.w + CSTEP, CoverBox.h + CSTEP)
      CoverBox.visible = True
    Endif
      Else
    TimerZoomin.STOP
  Endif
End

Public Sub TimerZoomOut_Timer()
    TimerZoomin.stop
    If CoverBox.w >= 0 Then
      If CoverBox.w - CSTEP < 0 Then
        CoverBox.Resize(0, 0)
        CoverBox.visible = False
          Else
        CoverBox.Resize(CoverBox.w - Cstep, CoverBox.h - Cstep)
      Endif
        Else
      TimerZoomout.STOP
      CoverBox.visible = False
  Endif
End

Public Function cutstring(mystr As String, MaxL As Integer) As String
  Dim tmpsplit As String
  If Len(mystr) > MaxL Then
    tmpsplit = Left(mystr, MaxL)
    If (Trim(Left(tmpsplit, RInStr(tmpsplit, "]"))) <> "") Then tmpsplit = Left(tmpsplit, RInStr(tmpsplit, "]"))
    If (Trim(Left(tmpsplit, RInStr(tmpsplit, "-"))) <> "") Then tmpsplit = Left(tmpsplit, RInStr(tmpsplit, "-"))
    mystr = Left(tmpsplit, RInStr(tmpsplit, " ")) & "..."
  Endif
  Return mystr
End

Public Sub cutstrings()
  Audioform.UpdateCell(audioform.griddown, 0, 1, cutstring(audioform.GridDown[0, 1].text, 50))
End


Public Sub PictureBox2_MouseDown()
  If Trim(FMain.mplayer.getP("Artist")) = "" Or Trim(FMain.mplayer.getP("title")) = "" Then
    Message.Error(("Missing Artist and/or Song information"))
    Return
  Endif
  FormLyrics.Searchlyrics(FMain.mplayer.getP("artist"), FMain.mplayer.getP("title"))
End



Public Sub Label17_MouseDown()
Stop
  PictureBox2_MouseDown()
End

Public Sub AudioAreaGroup_Arrange()
Dim w As Integer = Last.w
   picturebox1.h = CInt(audiopanel.h / 3.15)
   panelvisspacer.h = gridupbox.y Div 2

  If Last = audiopanel Then
    If GridDown[0, 1].text = "" Then 
      GridDown.Rows[0].h = 0
        Else
      GridDown.Rows[0].h = Griddown.Rows.H
    Endif
  
    pictureback.lower
    If Left(GeneralOptions.NoParseVisType2.text) = 0 Then 
      picturebox1.Background = Color.Transparent
      pictureback.Move(0, 0, audiopanel.w, AudioPanel.h)
        Else
      picturebox1.Background = Color.black
      pictureback.Move(0, 0, audiopanel.w, AudioPanel.h - picturebox1.h)
    Endif
    Return
  Endif
  
  If Last = gridupbox Then 
    MakeGridShadow(audioform.gridupShadow, GridUp)
    Return
  Endif
  If Last = panel1 Then 
    MakeGridShadow(audioform.griddownShadow, GridDown)
    Return
  Endif
  

End



Public Sub AudioAreaGroup_MouseMove()
'   Dim pw As Integer
'   pw = gridup.w
' FMain.outerbox.background = Color_mean
' audiopanel.background = Color_mean
' pictureback.Background = color_mean
'   gridup.w = 30
'   'Gridupshadow.hide
'   Wait 
'   gridup.w = pw
'  ' pictureback.hide
  FMain.VideoAreaGroup_MouseMove()
End

Public Sub ShowBackground(Optional i As Image = Null, Optional blursize As Integer = 6)
  Dim blurred As Image
  Dim gradient As Image
  Dim t As Image
  Dim pw, ph, cw, ch As Integer
  Dim max_light As Integer = 150 'normalize bright images to this value
  Dim max_light_down As Integer = 75 'normalize bright images to this value
  Dim mean As Integer
  Dim backcolorimg As Image
  Dim bluriterations, c As Integer

  Select Case blursize
    Case 7
      blursize = 3
      bluriterations = 3
    Case 6
      blursize = 5
      bluriterations = 4
    Case 5
      blursize = 10
      bluriterations = 6
    Case 4
      blursize = 20
      bluriterations = 8
    Case 3
      blursize = 40
      bluriterations = 16
    Case 2
      blursize = 80
      bluriterations = 16
    Case 1
      blursize = 160
      bluriterations = 8
  End Select

  
  
  pictureback.lower
  pictureback.background = Color.black
  
  gradient = Image.Load("shadeaudiopanel.png") '.Mirror(False, True)

  'take the background from the current cover
  If i = Null Then 
    blurred = CoverBox.Picture.Image
      Else
    blurred = i
  Endif
  
  'get a good blur effect without using gb.image.effects by resizing the image multiple times.
  'it works!
  For c = 1 To bluriterations
   blurred = blurred.Stretch(blursize * 2, blursize * 2)
   blurred = blurred.Stretch(blursize, blursize)     
  Next
  

  'normalize brightness
  mean = c_mean(blurred)
  If mean > max_light Then
    blurred = blurred.Brightness(-(1 - (max_light / mean)))
  Endif
  
  'compose the alpha mask gradient over the blurred image  
  blurred = blurred.Stretch(blurred.w, gradient.H)
  gradient = gradient.Stretch(blurred.w, blurred.h)
  blurred.PaintImage(gradient, 0, 0)


  pictureback.picture = blurred.picture
  pictureback.show

End


Public Function MakeGridShadow(sgrid As Gridview, dgrid As Gridview)
  Dim c, r As Integer
  Dim sr, dr As _gridview_row
  Dim offset As Integer = CInt(sgrid.Font.h / 11)

    sgrid.ignore = True
    sgrid.background = Color.transparent
    sgrid.foreground = Color.black

  With dgrid
    sgrid.font = .font
    sgrid.Columns.count = .Columns.Count
    sgrid.rows.count = .rows.Count
    sgrid.Move(.x + offset, .y + offset, .w, .h)

    For c = 0 To .Columns.max
      sgrid.Columns[c].W = dgrid.columns[c].w
      For r = 0 To .Rows.Max
        sgrid[r, c].text = dgrid[r, c].text
        sgrid[r, c].Foreground = Color.RGB(32, 32, 32, 32)
        sgrid.Rows[r].h = dgrid.Rows[r].h
      Next
    Next
  End With

  dgrid.raise
End



Private Function c_mean(img As Image) As Integer
Dim i, s As Integer
Dim skiprows As Integer = img.Pixels.count Div 8
'an imprecise color mean
  For i = skiprows To img.Pixels.Count - skiprows Step 3
    s += Color[img.Pixels[i]].value
  Next
  Return CInt(s / (img.Pixels.count - (skiprows * 2))) * 3
End


Public Sub audioareagroup_Click()
  If mouse_over_mic() Then PictureBox2_MouseDown()
End



Public Sub AutoresizeAudioForm()
' audioform.GridDown.AutoResize = False
' audioform.audiopanel.autoresize = False
' 
'   Wait
'   audioform.audiopanel.autoresize = True
'  audioform.GridDown.AutoResize = True

  Dim lastrow As _gridview_row
  Dim lastcolumn As _gridview_column
  Dim upWidth, downWidth As Integer

  'autoresize grid columns:
   GridDown.Columns[0].w = -1
   GridDown.Columns[1].w = -1
   GridUp.Columns[0].w = -1
   GridUp.Columns[1].w = -1
  'Stop
  GridUp.Columns[0].w += GridUp.Font.TextWidth("__")
  GridDown.Columns[0].w += GridDown.Font.TextWidth("__")

  'resize height of up and down panels
  lastrow = GridUp.rows[GridUp.Rows.max]
  GridUp.h = Max(lastrow.y + lastrow.h, coversize)
  
  lastrow = GridDown.rows[GridDown.rows.max]
  GridDown.h = lastrow.y + lastrow.h

  'resize width of up and down panels
  lastcolumn = GridUp.columns[GridUp.columns.max]
  GridUp.w = lastcolumn.x + lastcolumn.w
  UpWidth = GridUp.w + coverpanel.w
  
  lastcolumn = Griddown.columns[Griddown.columns.max]
  audioform.griddown.w = lastcolumn.x + lastcolumn.w
  DownWidth = griddown.w 
  

  leftalignup.w = (AudioPanel.w - Max(upwidth, downWidth)) Div 2
  leftaligndown.w = leftalignup.w 


End

Public Sub UpdateCell(g As Gridview, row As Integer, column As Integer, t As String)
  g[row, column].text = t
  If g = gridup Then 
    Try GridUpShadow[row, column].text = t
      Else If g = griddown Then 
      GridDownShadow[row, column].text = t
   Endif
End

